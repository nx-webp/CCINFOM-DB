package employee;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.util.Scanner;

public class Employee 
{

	public static void main(String[] args) 
	{	
		String url = "jdbc:mysql://localhost:3306/airport";
		String user = "root";
		String password = "Cupidissodumb<3"; // pls dont hack me guys
		
		int employeeID;
		String lastName;
		String firstName;
		String jobTitle;
		String HireDate;
		double salary;
		String department;
		int flight_id;
		
		int rowsAffected;
		
		Scanner scanner = new Scanner(System.in);
		
		try 
		{
			Class.forName("com.mysql.cj.jdbc.Driver");
			Connection con = DriverManager.getConnection(url, user, password);
			System.out.println("connection created");
			
			// Display menu options
	        System.out.println("Select an option:");
	        System.out.println("1. Show all employees");
	        System.out.println("2. Insert Into Employee Table");
	        System.out.println("3. Update Employee Flight Assignment");
	        int choice = scanner.nextInt(); // Taking the user's choice
	        
	        if(choice ==1) {
	        	Statement stmt = con.createStatement();
				ResultSet rs = stmt.executeQuery("SELECT * FROM Employee");
				while(rs.next()) { 
					employeeID = rs.getInt("employee_ID");
					lastName = rs.getString("last_name");
					firstName = rs.getString("first_name");
					jobTitle = rs.getString("job_title");
					HireDate = rs.getString("hire_date");
					salary = rs.getDouble("salary");
					department = rs.getString("department");
					flight_id = rs.getInt("flight_id");
					
					System.out.println("ID: " + employeeID + ", Name: " + firstName + " " + lastName + ", Job Title:" + jobTitle + ", Hire Date:" + HireDate + ", Salary:" + salary + ", Department:" + department + ", Flight Assigned:" + flight_id );
				}
	        }
	        
	        else if(choice ==2) {
	        	PreparedStatement stmt = null;
	        	// Get employee details from user input
	            System.out.println("Enter employee details:");

	            System.out.print("Employee ID: ");
	            employeeID = scanner.nextInt();
	            scanner.nextLine();  // Consume the newline left by nextInt()

	            System.out.print("Last Name: ");
	            lastName = scanner.nextLine();

	            System.out.print("First Name: ");
	            firstName = scanner.nextLine();

	            System.out.print("Job Title (e.g., Pilot, Co-pilot, Attendant, etc.): ");
	            jobTitle = scanner.nextLine();
	            
	            System.out.print("Hire Date: "); 
	            HireDate = scanner.nextLine();

	            System.out.print("Salary: ");
	            salary = scanner.nextDouble();
	            scanner.nextLine();  // Consume the newline left by nextDouble()

	            System.out.print("Department: ");
	            department = scanner.nextLine();

	            
					String insertEmployee = "INSERT INTO Employee (employee_ID, last_name, first_name, job_title, salary, department, flight_id) VALUES (?, ?, ?, ?, ?, ?, ?)";
					stmt = con.prepareStatement(insertEmployee);
					
					stmt.setInt(1, employeeID);
		            stmt.setString(2, lastName);
		            stmt.setString(3, firstName);
		            stmt.setString(4, jobTitle);
		            stmt.setString(5, HireDate);
		            stmt.setDouble(6, salary);
		            stmt.setString(7, department);
		            // Insert NULL for flight_id
		            stmt.setNull(8, Types.INTEGER);
		            
		            rowsAffected = stmt.executeUpdate();
		            if (rowsAffected > 0) {
		                System.out.println("Employee added and assigned to flight successfully!");
		            } else {
		                System.out.println("Error: Unable to add the employee.");
		            }
		            
				
	        }
	        
	        else if(choice ==3) {
	        	
	        	// Update the employee's flight assignment
                System.out.print("Enter Employee ID to update: ");
                employeeID = scanner.nextInt();
                scanner.nextLine();  // Consume the newline left by nextInt()

                System.out.print("Enter new Flight ID for the employee: ");
                flight_id = scanner.nextInt();
                scanner.nextLine();  // Consume the newline left by nextInt()

                // SQL query to update the flight assignment
                String updateSQL = "UPDATE Employee SET flight_id = ? WHERE employee_ID = ?";
                PreparedStatement stmt = con.prepareStatement(updateSQL);

                // Set values for the parameters
                stmt.setInt(1, flight_id);
                stmt.setInt(2, employeeID);
		           
		            // Execute the update statement
		            rowsAffected = stmt.executeUpdate();
		          
		            // Check if the update was successful
		            if (rowsAffected > 0) {
		                System.out.println("Employee details updated successfully.");
		            } else {
		                System.out.println("No employee found with ID " + employeeID);
		            }
		         }
	        
	        
	        else {
	            System.out.println("Invalid choice.");
	        }
			
				
				
			// show available employees based on status, dept, job title
			// add/assign employees to certain flight
			// update emp info
			// delete emp info from certain flight
			
			// total num of task an employee handled
			// total num of revenue generated by the emp
		} 
		
		catch (ClassNotFoundException e) 
		{
			System.out.println("MySQL Driver not found: " + e.getMessage());
		}
		
		catch (SQLException e) 
		{
            System.out.println("Connection failed: " + e.getMessage());
        }
		
		scanner.close();
	}
}


